{"mappings":"AAEA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBAqDpC,MAAMG,EAAQ,IAlDd,MAQEC,OACE,MAAMC,EAAiBC,KAAKC,kBAAkB,GAC9CD,KAAKE,OAAOH,E,CAGdI,QACE,GAAIH,KAAKI,SACP,OAEF,MAAMC,EAAYC,KAAKC,MACvBP,KAAKI,UAAW,EAEhBJ,KAAKQ,WAAaC,aAAY,KAC5B,MACMC,EADcJ,KAAKC,MACOF,EAC1BN,EAAiBC,KAAKC,kBAAkBS,GAC9CV,KAAKE,OAAOH,EAAe,GAC1B,I,CAGLY,OACEC,cAAcZ,KAAKQ,YACnBR,KAAKI,UAAW,EAChB,MAAML,EAAiBC,KAAKC,kBAAkB,GAC9CD,KAAKE,OAAOH,E,CAGdE,kBAAkBY,GAOhB,MAAO,C,MANOb,KAAKc,IACjBC,KAAKC,MAAMH,EAAS,MAAyB,O,KAElCb,KAAKc,IAAIC,KAAKC,MAAMH,EAAS,KAAoB,M,KACjDb,KAAKc,IAAIC,KAAKC,MAAMH,EAAS,IAAc,M,CAK1DC,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CA7CnCC,aAAYlB,OAAEA,IACZF,KAAKQ,WAAa,KAClBR,KAAKI,UAAW,EAChBJ,KAAKE,OAASA,EACdF,KAAKF,M,GA6Ce,CACtBI,OAMF,UAAyBmB,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IACtChC,EAAKK,UAAU4B,YAAc,GAAGH,KAASC,KAAQC,G,IAJnDhC,EAAKC,SAASiC,iBAAiB,QAAS5B,EAAMM,MAAMuB,KAAK7B,IACzDN,EAAKI,QAAQ8B,iBAAiB,QAAS5B,EAAMc,KAAKe,KAAK7B","sources":["src/js/03-timer.js"],"sourcesContent":["import '../css/common.css';\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nclass Timer {\n  constructor({ onTick }) {\n    this.intervalID = null;\n    this.isActive = false;\n    this.onTick = onTick;\n    this.init();\n  }\n\n  init() {\n    const timeComponents = this.getTimeComponents(0);\n    this.onTick(timeComponents);\n  }\n\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    this.isActive = true;\n\n    this.intervalID = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - startTime;\n      const timeComponents = this.getTimeComponents(deltaTime);\n      this.onTick(timeComponents);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalID);\n    this.isActive = false;\n    const timeComponents = this.getTimeComponents(0);\n    this.onTick(timeComponents);\n  }\n\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new Timer({\n  onTick: updateClockface,\n});\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\nfunction updateClockface({ hours, mins, secs }) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n"],"names":["$dccbe484a84862fb$var$refs","startBtn","document","querySelector","stopBtn","clockface","$dccbe484a84862fb$var$timer","init","timeComponents","this","getTimeComponents","onTick","start","isActive","startTime","Date","now","intervalID","setInterval","deltaTime","stop","clearInterval","time","pad","Math","floor","value","String","padStart","constructor","hours","mins","secs","textContent","addEventListener","bind"],"version":3,"file":"03-timer.a53ce5c9.js.map"}